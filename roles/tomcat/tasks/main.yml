---
- name: add group "tomcat"
  group: name={{ tomcat_group }}

- name: add users "tomcat"
  user: name={{ tomcat_user }} group={{ tomcat_group }} home="{{ tomcat_home }}" createhome=no

- name: Download Tomcat
  get_url:
    url: http://archive.apache.org/dist/tomcat/tomcat-{{ tomcat_version | first() }}/v{{ tomcat_version }}/bin/{{ tomcat_tar_archive }}
    dest: /opt/{{ tomcat_tar_archive }}

- name: Create directory
  file:
    path="{{ tomcat_home }}{{ tomcat_storage }}"
    mode=0755
    owner="{{ tomcat_user }}"
    group="{{ tomcat_group }}"
    state=directory

- name: Extract archive
  unarchive:
    src: /opt/{{ tomcat_tar_archive }}
    dest: "{{ tomcat_home }}{{ tomcat_storage }}/"
    remote_src: yes
    extra_opts: [--strip-components=1]

- name: Configure Tomcat service
  template:
    src: tomcat.service
    dest: "{{ tomcat_service }}"
    mode: 0755
  notify:
    - restart tomcat

- name: Configure Tomcat users
  template:
    src: tomcat-users.xml
    dest: "{{ tomcat_home }}{{ tomcat_storage }}/conf/"
    mode: 0755
  notify:
    - restart tomcat

- name: Configure Tomcat context
  copy:
    src: context.xml
    dest: "{{ tomcat_home }}{{ tomcat_storage }}/webapps/manager/META-INF/"
    mode: 0755
  notify:
    - restart tomcat

- name: Configure Tomcat server
  template:
    src: server.xml
    dest: "{{ tomcat_home }}{{ tomcat_storage }}/conf"
    mode: 0755
  notify:
    - restart tomcat

- name: set owner tomcat
  shell: chown -R {{ tomcat_user }}:{{ tomcat_group }} {{ tomcat_home }}

- name: Set Firewalld
  firewalld:
    port: 8080/tcp
    permanent: yes
    state: enabled

- name: restart service firewall
  systemd:
    name: firewalld
    daemon_reload: yes

- name: restart service daemon
  shell: systemctl daemon-reload

- name: Start and enabled Tomcat service
  systemd:
    name: tomcat
    state: started
    enabled: yes
    daemon_reload: yes

